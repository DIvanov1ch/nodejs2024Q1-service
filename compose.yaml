# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

services:

  # rest-part:
  #   container_name: rest-api
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   environment:
  #     PORT: ${PORT}
  #   ports:
  #     - ${PORT}:${PORT}
  #   restart: always
  #   volumes:
  #     - .:/usr/src/app
  #   networks:
  #     - service-net
  #   env_file:
  #     - .env

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
    # depends_on:
    #   database:
    #     condition: service_healthy
  database:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: postgres
    restart: always
    user: ${POSTGRES_USER}
    volumes:
      - db-data:/var/lib/postgresql/data
      - db-logs:/var/log/postgresql
    environment:
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    # networks:
    #   - service-net
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
volumes:
  db-data:
  db-logs:

# networks:
#   service-net:
#     name: service-net
#     driver: bridge
